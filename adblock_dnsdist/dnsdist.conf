dohEnabled=os.getenv("DOH_ENABLED")
dohDomain=os.getenv("DOH_DOMAIN")

-- upstream resolver
newServer({address='127.0.0.1:1153', qps=5, name='resolver1'})

-- allow query from all IP addresses
setACL({'0.0.0.0/0', '::/0'})

-- add a DNS resolver listening on port 53 of all interfaces
setLocal('0.0.0.0:53', {reusePort=true})
addLocal('[::]:53', {reusePort=true})

if dohEnabled == 'true' then
    certFile=string.format('/etc/letsencrypt/live/%s/fullchain.pem', dohDomain)
    keyFile=string.format('/etc/letsencrypt/live/%s/privkey.pem', dohDomain)

    -- add a DoH resolver listening on port 443 of all interfaces
    addDOHLocal('0.0.0.0:443', certFile, keyFile, { '/', '/dns-query' }, { doTCP=true, reusePort=true, tcpFastOpenSize=0 })
    addDOHLocal('[::]:443', certFile, keyFile, { '/', '/dns-query' }, { doTCP=true, reusePort=true, tcpFastOpenSize=0 })

    -- add a DoT resolver listening on port 853 of all interfaces
    addTLSLocal('0.0.0.0', certFile, keyFile)
    addTLSLocal('[::]', certFile, keyFile)
end

-- add a local control socket
controlSocket('127.0.0.1')
setKey("miQjUydO7fwUmSDS0hT+2pHC1VqT8vOjfexOyvHKcNA=")

-- add logging target to dnstap
dnstap=newFrameStreamUnixLogger('/var/run/dnstap/dnstap.sock')
addResponseAction(AllRule(), DnstapLogResponseAction("dns", dnstap))
